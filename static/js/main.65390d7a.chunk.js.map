{"version":3,"sources":["components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["Form","state","name","number","onInputChange","event","currentTarget","value","setState","onSubmit","preventDefault","contact","id","shortid","generate","props","reset","this","onChange","type","pattern","title","required","Component","Filter","ContactList","contacts","onDeleteContact","map","onClick","App","filter","formId","contactDelete","contactId","prevState","formSubmitHandler","data","forEach","element","toLowerCase","alert","changeFilter","getContactshown","normalizedFilter","includes","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65390d7a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    this.props.onSubmit(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={this.onInputChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input\r\n            value={this.state.number}\r\n            onChange={this.onInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Filter by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <p>\r\n          {name}\r\n          <span>{number}</span>\r\n        </p>\r\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport Form from \"./components/Form\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\" component did mount\");\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    console.log(parsedContacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"component did update\");\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      console.log(\"Контакти було оновлено\");\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  formId = () => {\r\n    shortid.generate();\r\n  };\r\n\r\n  contactDelete = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  formSubmitHandler = (data) => {\r\n    this.state.contacts.forEach((element) => {\r\n      if (element.name.toLowerCase() === data.name.toLowerCase()) {\r\n        data.name = \"repeat\";\r\n        return alert(\"contact already exist at phonebook \");\r\n      }\r\n    });\r\n    if (data.name === \"repeat\") {\r\n      return;\r\n    }\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [data, ...contacts],\r\n    }));\r\n  };\r\n  changeFilter = (event) => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n  getContactshown = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.formSubmitHandler} />\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={this.getContactshown()}\r\n          onDeleteContact={this.contactDelete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}